// <auto-generated />
using System;
using ComplaintPortal.Entities.EFCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ComplaintPortal.Entities.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250613080712_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_0900_ai_ci")
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");
            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("ComplaintPortal.Entities.Models.RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Expires")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Revoked")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("ComplaintPortal.Entities.Models.city", b =>
                {
                    b.Property<int>("CityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CityID"));

                    b.Property<bool?>("ActiveStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValueSql("'1'");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("DistrictID")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("StateID")
                        .HasColumnType("int");

                    b.HasKey("CityID")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "DistrictID" }, "DistrictID");

                    b.HasIndex(new[] { "StateID" }, "StateID");

                    b.ToTable("cities");
                });

            modelBuilder.Entity("ComplaintPortal.Entities.Models.complaint", b =>
                {
                    b.Property<int>("ComplaintID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ComplaintID"));

                    b.Property<bool?>("ActiveStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValueSql("'1'");

                    b.Property<int?>("ComplaintTypeID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<decimal?>("GeoLat")
                        .HasPrecision(10, 6)
                        .HasColumnType("decimal(10,6)");

                    b.Property<decimal?>("GeoLong")
                        .HasPrecision(10, 6)
                        .HasColumnType("decimal(10,6)");

                    b.Property<string>("Image1")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Image2")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Image3")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.Property<int?>("WardID")
                        .HasColumnType("int");

                    b.HasKey("ComplaintID")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "ComplaintTypeID" }, "ComplaintTypeID");

                    b.HasIndex(new[] { "Status" }, "Status");

                    b.HasIndex(new[] { "UserID" }, "UserID");

                    b.HasIndex(new[] { "WardID" }, "WardID");

                    b.ToTable("complaints");
                });

            modelBuilder.Entity("ComplaintPortal.Entities.Models.complaintstatus", b =>
                {
                    b.Property<int>("StatusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("StatusID"));

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("StatusID")
                        .HasName("PRIMARY");

                    b.ToTable("complaintstatus", (string)null);
                });

            modelBuilder.Entity("ComplaintPortal.Entities.Models.complainttype", b =>
                {
                    b.Property<int>("ComplaintTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ComplaintTypeID"));

                    b.Property<string>("ComplaintType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.HasKey("ComplaintTypeID")
                        .HasName("PRIMARY");

                    b.ToTable("complainttype", (string)null);
                });

            modelBuilder.Entity("ComplaintPortal.Entities.Models.district", b =>
                {
                    b.Property<int>("DistrictID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("DistrictID"));

                    b.Property<bool?>("ActiveStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValueSql("'1'");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("StateID")
                        .HasColumnType("int");

                    b.HasKey("DistrictID")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "StateID" }, "StateID")
                        .HasDatabaseName("StateID1");

                    b.ToTable("districts");
                });

            modelBuilder.Entity("ComplaintPortal.Entities.Models.role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<bool?>("activeState")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValueSql("'1'");

                    b.Property<string>("createdBy")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(7)
                        .HasColumnType("char(7)")
                        .HasDefaultValueSql("'SYSTEM'")
                        .IsFixedLength();

                    b.Property<DateTime?>("createdDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime?>("modifiedDate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime?>("modifiedDate"));

                    b.HasKey("RoleId")
                        .HasName("PRIMARY");

                    b.ToTable("roles");
                });

            modelBuilder.Entity("ComplaintPortal.Entities.Models.state", b =>
                {
                    b.Property<int>("StateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("StateId"));

                    b.Property<bool?>("ActiveStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValueSql("'1'");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("State")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("StateId")
                        .HasName("PRIMARY");

                    b.ToTable("states");
                });

            modelBuilder.Entity("ComplaintPortal.Entities.Models.user", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("UserId"));

                    b.Property<bool?>("ActiveState")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValueSql("'1'");

                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<bool?>("IsRegistered")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValueSql("'1'");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("ModifiedDate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime?>("ModifiedDate"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Pincode")
                        .HasMaxLength(7)
                        .HasColumnType("varchar(7)");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("UserId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "RoleId" }, "RoleId");

                    b.ToTable("users");
                });

            modelBuilder.Entity("ComplaintPortal.Entities.Models.ward", b =>
                {
                    b.Property<int>("WardID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("WardID"));

                    b.Property<bool?>("ActiveStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValueSql("'1'");

                    b.Property<string>("AreaCovered")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("CityID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.HasKey("WardID")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "CityID" }, "CityID");

                    b.ToTable("wards");
                });

            modelBuilder.Entity("ComplaintPortal.Entities.Models.RefreshToken", b =>
                {
                    b.HasOne("ComplaintPortal.Entities.Models.user", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_RefreshToken_User_UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ComplaintPortal.Entities.Models.city", b =>
                {
                    b.HasOne("ComplaintPortal.Entities.Models.district", "District")
                        .WithMany("cities")
                        .HasForeignKey("DistrictID")
                        .HasConstraintName("cities_ibfk_1");

                    b.HasOne("ComplaintPortal.Entities.Models.state", "State")
                        .WithMany("cities")
                        .HasForeignKey("StateID")
                        .HasConstraintName("cities_ibfk_2");

                    b.Navigation("District");

                    b.Navigation("State");
                });

            modelBuilder.Entity("ComplaintPortal.Entities.Models.complaint", b =>
                {
                    b.HasOne("ComplaintPortal.Entities.Models.complainttype", "ComplaintType")
                        .WithMany("complaints")
                        .HasForeignKey("ComplaintTypeID")
                        .HasConstraintName("complaints_ibfk_2");

                    b.HasOne("ComplaintPortal.Entities.Models.complaintstatus", "StatusNavigation")
                        .WithMany("complaints")
                        .HasForeignKey("Status")
                        .HasConstraintName("complaints_ibfk_4");

                    b.HasOne("ComplaintPortal.Entities.Models.user", "User")
                        .WithMany("complaints")
                        .HasForeignKey("UserID")
                        .HasConstraintName("complaints_ibfk_3");

                    b.HasOne("ComplaintPortal.Entities.Models.ward", "Ward")
                        .WithMany("complaints")
                        .HasForeignKey("WardID")
                        .HasConstraintName("complaints_ibfk_1");

                    b.Navigation("ComplaintType");

                    b.Navigation("StatusNavigation");

                    b.Navigation("User");

                    b.Navigation("Ward");
                });

            modelBuilder.Entity("ComplaintPortal.Entities.Models.district", b =>
                {
                    b.HasOne("ComplaintPortal.Entities.Models.state", "State")
                        .WithMany("districts")
                        .HasForeignKey("StateID")
                        .HasConstraintName("districts_ibfk_1");

                    b.Navigation("State");
                });

            modelBuilder.Entity("ComplaintPortal.Entities.Models.user", b =>
                {
                    b.HasOne("ComplaintPortal.Entities.Models.role", "Role")
                        .WithMany("users")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("users_ibfk_1");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("ComplaintPortal.Entities.Models.ward", b =>
                {
                    b.HasOne("ComplaintPortal.Entities.Models.city", "CityNavigation")
                        .WithMany("wards")
                        .HasForeignKey("CityID")
                        .HasConstraintName("wards_ibfk_1");

                    b.Navigation("CityNavigation");
                });

            modelBuilder.Entity("ComplaintPortal.Entities.Models.city", b =>
                {
                    b.Navigation("wards");
                });

            modelBuilder.Entity("ComplaintPortal.Entities.Models.complaintstatus", b =>
                {
                    b.Navigation("complaints");
                });

            modelBuilder.Entity("ComplaintPortal.Entities.Models.complainttype", b =>
                {
                    b.Navigation("complaints");
                });

            modelBuilder.Entity("ComplaintPortal.Entities.Models.district", b =>
                {
                    b.Navigation("cities");
                });

            modelBuilder.Entity("ComplaintPortal.Entities.Models.role", b =>
                {
                    b.Navigation("users");
                });

            modelBuilder.Entity("ComplaintPortal.Entities.Models.state", b =>
                {
                    b.Navigation("cities");

                    b.Navigation("districts");
                });

            modelBuilder.Entity("ComplaintPortal.Entities.Models.user", b =>
                {
                    b.Navigation("complaints");
                });

            modelBuilder.Entity("ComplaintPortal.Entities.Models.ward", b =>
                {
                    b.Navigation("complaints");
                });
#pragma warning restore 612, 618
        }
    }
}
